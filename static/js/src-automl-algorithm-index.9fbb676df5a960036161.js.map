{"version":3,"sources":["webpack:///./src/automl/algorithm/_mock/dataItem.js","webpack:///./src/automl/algorithm/_mock/list.js","webpack:///./src/automl/algorithm/index.mdx"],"names":["id","name","desc","params","key","type","default","extra","data","value","condition","tree","max_features","min","max","_react","_interopRequireDefault","__webpack_require__","_tag","_docz","_reactPowerplug","_antd","_index","_dataItem","_list","MDXContent","props","_this","_classCallCheck2","this","_possibleConstructorReturn2","_getPrototypeOf2","call","layout","_this$props","components","_objectWithoutProperties2","createElement","MDXTag","parentName","Playground","__codesandbox","__position","__code","__scope","State","Toggle","Button","AutoML","LocaleProvider","item","list","initial","disabled","norm_size","_ref","state","setState","Fragment","style","marginBottom","onClick","locale","Algorithm","onChange","JSON","stringify","PropsTable","of","React","Component"],"mappings":"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","file":"static/js/src-automl-algorithm-index.c6e5a7bc.js","sourcesContent":["\nexport const item = {\n  id: '1',\n  name: '特征抽样策略',\n  desc: '特征抽样策略特征抽样策略特征抽样策略f',\n  params: [\n    {\n      key: 'tree',\n      name: '树的个数',\n      type: 'tag-input',\n      default: [10],\n      extra: '树的数量'\n    }, {\n      key: 'max_features',\n      name: '特征抽象策略',\n      type: 'select',\n      data: [\n        {\n          name: 'one',\n          value: 'one',\n        },\n        {\n          name: 'two',\n          value: 'two',\n        },\n        {\n          name: 'three',\n          value: 'max_features##array',\n        },\n        {\n          name: 'four',\n          value: 'max_features##number',\n        },\n        {\n          name: 'five',\n          value: 'five',\n        }\n      ],\n      default: 'max_features##array',\n    }, {\n      key: 'max_features##array',\n      name: 'three_detail',\n      type: 'tag-input',\n      default: [23, 232, 23],\n    }, {\n      key: 'max_features##number',\n      name: 'number_detail',\n      type: 'inputnumber',\n      default: 0.4,\n    }, {\n      key: 'diff',\n      name: 'aaaaaaaa',\n      type: 'inputnumber',\n      default: 0.14,\n      condition: 'max_features$$five'\n    }, {\n      key: 'diff2',\n      name: 'aaaaaaaa',\n      type: 'inputnumber',\n      default: 0.1224,\n      condition: 'max_features$$five'\n    }\n  ]\n}\n\nexport const value = {\n  id: '1',\n  name: '特征抽样策略',\n  params: {\n    tree: [1,2,3,4,5,6],\n    // max_features: 'five',\n    max_features: [1,2,3],\n    // diff2: '232'\n  }\n}\n\n// 两种情况\n// 1. 下拉框需要其它输入框的数据\n// 2. 下拉框控制其它输入框显示影藏\n","export default [\n  {\n    id: 'd7660525-e5a3-44fd-af23-8376f945bfb5',\n    name: 'LeNet',\n    desc: '一个随机森林是由许多决策树。森林中的每棵树预测一条记录，并且每棵树“投票”森林的最终答案,森林选择票数最多的班级。 决策树是构建决策树的简单 算法。决策树的每个节点都包含其中一个输入要素的条件。当“增长”（即训练）森林时： • 对于每棵树，使用训练集的随机样本; • 对于树中的每个决策点，都考虑输入要素的随机子集。 随机森林通常会提供良好的结果，代价是模型的“可解释性',\n    params: [{\n      key: 'norm_size',\n      name: 'norm_size1',\n      min: 48,\n      max: 224,\n      type: 'inputnumber',\n      default: 48,\n    }]\n  }, {\n    id: '39f0901a-1807-40bf-848a-304d19d4ace4',\n    name: 'VGG19',\n    desc: 'VGG19',\n    params: [{\n      key: 'norm_size',\n      name: 'norm_size2',\n      min: 48,\n      max: 224,\n      type: 'inputnumber',\n      default: 48,\n    }]\n  }, {\n    id: 'bd2b5e04-695b-4763-a39f-d1b1b1c02a8f',\n    name: 'VGG19',\n    desc: 'VGG19',\n    params: [{\n      key: 'norm_size',\n      name: 'norm_size3',\n      min: 48,\n      max: 224,\n      type: 'inputnumber',\n      default: 48,\n    }]\n  }, {\n    id: 'd1010bce-2050-4beb-855b-d9ebcae81598',\n    name: 'VGG19',\n    desc: 'VGG19',\n    params: [{\n      key: 'norm_size',\n      name: 'norm_size4',\n      min: 48,\n      max: 224,\n      type: 'inputnumber',\n      default: 48,\n    }]\n  }, {\n    id: 'e4918d33-224f-4b44-9c66-69e2a1632e65',\n    name: 'Xception',\n    desc: 'Xception',\n    params: [{\n      key: 'norm_size',\n      name: 'norm_size5',\n      min: 48,\n      max: 224,\n      type: 'inputnumber',\n      default: 48,\n    }]\n  }\n]\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Playground, PropsTable } from 'docz';\nimport { State, Toggle } from 'react-powerplug';\nimport { Button } from 'antd';\nimport { AutoML, LocaleProvider } from '../../index.tsx';\nimport { item, value } from './_mock/dataItem.js';\nimport list from './_mock/list.js';\n\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"alogrithm\"}}>{`Alogrithm`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"使用\"}}>{`使用`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Alogrithm`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"参数模板\"}}>{`参数模板`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"组件输出接口数据\"}}>{`组件输出接口数据`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`[\n  {\n    \"id\": \"99bbf190-a77d-65f7-2c3c-2d4372730695\",\n    \"name\": \"随机森林\",\n    \"params\": {\n        \"max_features\": \"Null\",\n        \"max_depth\": [\n            10\n        ],\n        \"n_jobs\": 1,\n        \"n_estimators\": [\n            10\n        ],\n        \"min_samples_leaf\": [\n            1\n        ]\n    }\n}\n]\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"案例介绍\"}}>{`案例介绍`}</MDXTag>\n<Playground __codesandbox={`undefined`} __position={0} __code={'<State\\n  initial={{\\n    disabled: false,\\n    value: [\\n      {\\n        id: \\'d7660525-e5a3-44fd-af23-8376f945bfb5\\',\\n        name: \\'LeNet\\',\\n        params: { norm_size: 4833 },\\n      },\\n      {\\n        id: \\'39f0901a-1807-40bf-848a-304d19d4ace4\\',\\n        name: \\'VGG19\\',\\n        params: { norm_size: 48 },\\n      },\\n      {\\n        id: \\'d1010bce-2050-4beb-855b-d9ebcae81598\\',\\n        name: \\'VGG19\\',\\n        params: { norm_size: 4333 },\\n      },\\n    ],\\n  }}\\n>\\n  {({ state, setState }) => (\\n    <React.Fragment>\\n      <Button\\n        style={{ marginBottom: \\'10px\\' }}\\n        type=\\\"primay\\\"\\n        onClick={() => {\\n          setState({ disabled: !state.disabled })\\n        }}\\n      >\\n        {state.disabled ? \\'启用\\' : \\'禁用\\'}\\n      </Button>\\n      <LocaleProvider locale={\\'zh_CN\\'}>\\n        <React.Fragment>\\n          <AutoML.Algorithm\\n            disabled={state.disabled}\\n            value={state.value}\\n            data={list}\\n            onChange={value => setState({ value })}\\n          />\\n          {/* <AutoML.Algorithm.Item value={state.value} data={item} onChange={(value) => (setState({ value }))} /> */}\\n          <span>change value: {JSON.stringify(state.value)}</span>\\n        </React.Fragment>\\n      </LocaleProvider>\\n    </React.Fragment>\\n  )}\\n</State>'} __scope={{props: this ? this.props : props,State,Toggle,Button,AutoML,LocaleProvider,item,value,list}}>\n  <State initial={{disabled: false, value: [{\"id\":\"d7660525-e5a3-44fd-af23-8376f945bfb5\",\"name\":\"LeNet\",\"params\":{\"norm_size\":4833}},{\"id\":\"39f0901a-1807-40bf-848a-304d19d4ace4\",\"name\":\"VGG19\",\"params\":{\"norm_size\":48}},{\"id\":\"d1010bce-2050-4beb-855b-d9ebcae81598\",\"name\":\"VGG19\",\"params\":{\"norm_size\":4333}}]}}>\n    {({ state, setState }) => (\n      <React.Fragment>\n        <Button style={{marginBottom: '10px'}} type='primay' onClick={() => { setState({ disabled: !state.disabled}) }}>{state.disabled ? '启用' : '禁用'}</Button>\n        <LocaleProvider locale={'zh_CN'}>\n          <React.Fragment>\n            <AutoML.Algorithm disabled={state.disabled} value={state.value} data={list} onChange={(value) => (setState({ value }))} />\n            {/* <AutoML.Algorithm.Item value={state.value} data={item} onChange={(value) => (setState({ value }))} /> */}\n            <span>\n              change value: {JSON.stringify(state.value)}\n            </span>\n          </React.Fragment>\n        </LocaleProvider>\n      </React.Fragment>\n    )}\n  </State>\n</Playground>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"api\"}}>{`API`}</MDXTag>\n<PropsTable of={AutoML.Algorithm} />\n           </MDXTag>\n  }\n}\n  "],"sourceRoot":""}